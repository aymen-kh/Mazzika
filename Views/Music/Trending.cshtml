@model List<Mazzika.Models.Video>

@{
    ViewData["Title"] = "Trending Music";
}

<div class="container-fluid mt-4">
    <div class="section-header mb-4">
        <h1 class="section-title">Trending in Tunisia</h1>
    </div>

    @if (!string.IsNullOrEmpty(ViewBag.Message))
    {
        <div class="alert alert-info">@ViewBag.Message</div>
    }
    else if (Model != null && Model.Any())
    {
        <div class="music-grid">
            @foreach (var video in Model)
            {
                <div class="card h-100" data-video-id="@video.Id" data-title="@video.Title" 
                     data-description="@video.Description" data-thumbnail="@video.ThumbnailUrl" 
                     data-published-at="@video.PublishedAt" data-channel-title="@video.ChannelTitle">
                    <div class="position-relative">
                        <img src="@video.ThumbnailUrl" class="card-img-top" alt="@video.Title">
                        <div class="play-overlay">
                            <i class="bi bi-play-circle-fill"></i>
                        </div>
                    </div>
                    <div class="card-body">
                        <h5 class="card-title text-truncate">@video.Title</h5>
                        <p class="card-text">@video.ChannelTitle</p>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="text-center mt-5">
            <i class="bi bi-music-note-list" style="font-size: 3rem;"></i>
            <h3 class="mt-3">No trending music available</h3>
            <p class="text-muted">Check back later for the latest trending tracks!</p>
        </div>
    }
</div>

<div id="player" style="display:none;"></div>

@section Scripts {
<script>
    // Use shared player instance from site.js
    document.addEventListener('DOMContentLoaded', () => {
        playPauseIcon = document.getElementById('play-pause-icon');
        progressSlider = document.getElementById('progress');

        progressSlider.addEventListener('input', () => {
            isSeeking = true;
        });

        progressSlider.addEventListener('change', () => {
            player.seekTo(progressSlider.value, true);
            isSeeking = false;
        });

        // Add click handlers for cards
        document.querySelectorAll('.card').forEach(card => {
            card.addEventListener('click', function() {
                const videoData = {
                    id: this.dataset.videoId,
                    title: this.dataset.title,
                    description: this.dataset.description,
                    thumbnailUrl: this.dataset.thumbnail,
                    publishedAt: this.dataset.publishedAt,
                    channelTitle: this.dataset.channelTitle
                };
                playVideo(videoData.id, videoData.title, videoData.description, 
                         this.querySelector('img').src, videoData.publishedAt, 
                         videoData.channelTitle);
            });
        });
    });
</script>
}

<style>
    .music-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
        gap: 1.5rem;
        margin-bottom: 80px;
    }

    .card {
        background-color: #282828;
        transition: all 0.3s ease;
        border: none;
        cursor: pointer;
    }

    .card:hover {
        background-color: #383838;
        transform: translateY(-5px);
    }

    .card-img-top {
        width: 100%;
        aspect-ratio: 16/9;
        object-fit: cover;
    }

    .play-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0, 0, 0, 0.5);
        display: flex;
        align-items: center;
        justify-content: center;
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .play-overlay i {
        font-size: 3rem;
        color: white;
    }

    .card:hover .play-overlay {
        opacity: 1;
    }

    .card-title {
        color: white;
        font-size: 0.9rem;
        margin-bottom: 4px;
    }

    .card-text {
        color: #b3b3b3;
        font-size: 0.8rem;
    }

    #player-bar {
        position: fixed;
        bottom: 0;
        left: 0;
        right: 0;
        background: #282828;
        padding: 16px;
        color: white;
        z-index: 1000;
    }

    #controls {
        display: flex;
        align-items: center;
        gap: 16px;
    }

    #song-info {
        flex: 1;
        margin: 0 16px;
    }

    #progress {
        width: 100%;
        height: 4px;
        margin-top: 8px;
    }

    .section-title {
        color: white;
        font-size: 2rem;
        font-weight: bold;
        margin-bottom: 24px;
    }
</style>