@model IEnumerable<Mazzika.Models.TopTrack>
@{
    ViewData["Title"] = "Your Most Played Tracks";
}

<div class="container mt-4">
    <h2 class="mb-4">Top Tracks</h2>
    <div id="player" style="display:none;"></div>
    <div class="row" id="tracks-container">
        @if (Model != null && Model.Any())
        {
            foreach (var track in Model)
            {
                <div class="col-md-4 mb-4">
                    <div class="card h-100">
                        <div class="position-relative">
                            <img src="@track.ThumbnailUrl" class="card-img-top" alt="@track.Title">
                            <div class="play-overlay position-absolute top-0 start-0 w-100 h-100 d-flex align-items-center justify-content-center">
                                <i class="bi bi-play-circle-fill text-light" style="font-size: 3rem;"></i>
                            </div>
                            <div class="play-count position-absolute bottom-0 end-0 m-2 px-2 py-1 rounded bg-dark bg-opacity-75 text-light">
                                <i class="bi bi-play-fill"></i>
                                <span>@track.PlayCount</span>
                            </div>
                        </div>
                        <div class="card-body">
                            <h5 class="card-title text-truncate">@track.Title</h5>
                            <p class="card-text">
                                <small class="text-muted">
                                    By @track.ChannelTitle<br/>
                                    Last played: @track.FormattedLastPlayed
                                </small>
                            </p>
                            <button class="btn btn-primary play-video w-100" 
                                    data-video-id="@track.VideoId"
                                    data-title="@track.Title"
                                    data-description="@track.Description"
                                    data-thumbnail="@track.ThumbnailUrl"
                                    data-channel-title="@track.ChannelTitle"
                                    data-published-at="@track.PublishedAt.ToString("o")">
                                <i class="bi bi-play-fill"></i> Play
                            </button>
                        </div>
                    </div>
                </div>
            }
        }
    </div>
    <div id="guest-tracks-container" class="row mt-4">
        <!-- Guest tracks will be loaded here by JavaScript -->
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Load guest tracks from localStorage
            const guestTracks = getPlayedTracks();
            const guestContainer = document.getElementById('guest-tracks-container');
            const existingVideoIds = new Set(Array.from(document.querySelectorAll('[data-video-id]')).map(el => el.dataset.videoId));
            
            if (guestTracks && guestTracks.length > 0) {
                guestTracks.forEach(videoId => {
                    if (!existingVideoIds.has(videoId)) {
                        // Fetch video details from YouTube API
                        fetch(`/Music/GetVideoDetails?videoId=${videoId}`)
                            .then(response => response.json())
                            .then(video => {
                                const trackCard = createTrackCard(video);
                                guestContainer.appendChild(trackCard);
                            })
                            .catch(console.error);
                    }
                });
            }

            // Add click handlers for all play buttons
            document.addEventListener('click', function(e) {
                if (e.target.closest('.play-video')) {
                    const button = e.target.closest('.play-video');
                    e.preventDefault();
                    const videoData = {
                        videoId: button.dataset.videoId,
                        title: button.dataset.title,
                        description: button.dataset.description,
                        thumbnailUrl: button.dataset.thumbnail,
                        publishedAt: button.dataset.publishedAt,
                        channelTitle: button.dataset.channelTitle
                    };
                    
                    playVideo(
                        videoData.videoId,
                        videoData.title,
                        videoData.description,
                        videoData.thumbnailUrl,
                        videoData.publishedAt,
                        videoData.channelTitle
                    );
                }
            });
        });

        function createTrackCard(video) {
            const div = document.createElement('div');
            div.className = 'col-md-4 mb-4';
            div.innerHTML = `
                <div class="card h-100">
                    <div class="position-relative">
                        <img src="${video.thumbnailUrl}" class="card-img-top" alt="${video.title}">
                        <div class="play-overlay position-absolute top-0 start-0 w-100 h-100 d-flex align-items-center justify-content-center">
                            <i class="bi bi-play-circle-fill text-light" style="font-size: 3rem;"></i>
                        </div>
                    </div>
                    <div class="card-body">
                        <h5 class="card-title text-truncate">${video.title}</h5>
                        <p class="card-text">
                            <small class="text-muted">
                                By ${video.channelTitle}
                            </small>
                        </p>
                        <button class="btn btn-primary play-video w-100" 
                                data-video-id="${video.id}"
                                data-title="${video.title}"
                                data-description="${video.description || ''}"
                                data-thumbnail="${video.thumbnailUrl}"
                                data-channel-title="${video.channelTitle}"
                                data-published-at="${video.publishedAt}">
                            <i class="bi bi-play-fill"></i> Play
                        </button>
                    </div>
                </div>
            `;
            return div;
        }
    </script>
}